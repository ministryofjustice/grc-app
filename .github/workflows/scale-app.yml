name: 'Scale app up or down'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
        - 'sandbox'
        - 'staging'
        - 'production'
        default: 'sandbox'
      application:
        description: 'Which application?'
        required: true
        type: choice
        options:
        - 'grc'
        - 'admin'
        - 'dashboard'
        default: 'grc'
      instances:
        description: 'Number of instances (leave blank to keep the same)'
        required: false
        type: string
      memory:
        description: 'Memory (leave blank to keep the same) - e.g. 256M or 1G'
        required: false
        type: string
      disk_space:
        description: 'Disk Space (leave blank to keep the same) - e.g. 256M or 1G'
        required: false
        type: string

jobs:
  scale_apps:
    name: 'Scale app up or down'
    runs-on: ubuntu-latest

    steps:
      - name: 'Install the Cloud Foundry CLI'
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf7-cli

      - name: 'Login to Gov.UK PaaS'
        run: |
          cf login -a api.london.cloud.service.gov.uk -u ${{ secrets.CF_USERNAME }} -p '${{ secrets.CF_PASSWORD }}' -o 'geo-gender-recognition-certificate' -s 'sandbox'

      - name: 'Target the required environment'
        run: |
          cf target -s '${{ github.event.inputs.environment }}'

      - name: 'Set the application name and parameters and scale the application'
        run: |
          if [ "${{ github.event.inputs.environment}}" == "sandbox" ];
          then
            APP_NAME_PREFIX="geo-gender-recognition-certificate"
          else
            APP_NAME_PREFIX='grc-${{ github.event.inputs.environment }}'
          fi
          echo "Prefix is: ${APP_NAME_PREFIX}"
          
          if [ "${{ github.event.inputs.application}}" == "grc" ];
          then
            APP_NAME_SUFFIX=""
          else
            APP_NAME_SUFFIX='-${{ github.event.inputs.application }}'
          fi
          echo "Suffix is: ${APP_NAME_SUFFIX}"

          APP_NAME="${APP_NAME_PREFIX}${APP_NAME_SUFFIX}"
          echo "App name is: ${APP_NAME}"

          if [ "${{ github.event.inputs.instances }}" != "" ];
          then
            INSTANCES_PARAM="-i ${{ github.event.inputs.instances }} "
          fi
          echo "Instanced param: ${INSTANCES_PARAM}"
          
          if [ "${{ github.event.inputs.memory }}" != "" ];
          then
            MEMORY_PARAM="-m ${{ github.event.inputs.memory }} "
          fi
          echo "Instanced param: ${MEMORY_PARAM}"
          
          if [ "${{ github.event.inputs.disk_space }}" != "" ];
          then
            DISK_SPACE_PARAM="-k ${{ github.event.inputs.disk_space }} "
          fi
          echo "Instanced param: ${DISK_SPACE_PARAM}"
          
          cf scale "${APP_NAME}" ${INSTANCES_PARAM} ${MEMORY_PARAM} ${DISK_SPACE_PARAM} -f
