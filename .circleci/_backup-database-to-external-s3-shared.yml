name: '(shared functionality) Backup databases to external-to-Gov.UK-PaaS S3 bucket'

on:
  workflow_call:
    inputs:
      cf_space:
        required: true
        type: string
      database_name:
        required: true
        type: string
    secrets:
      cf_username:
        required: true
      cf_password:
        required: true
      external_backup_encryption_key:
        required: true
      external_s3_aws_access_key_id:
        required: true
      external_s3_aws_secret_access_key:
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.external_s3_aws_access_key_id }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.external_s3_aws_secret_access_key }}
  AWS_DEFAULT_REGION: eu-west-2

jobs:
  backup:
    name: Backup database
    runs-on: ubuntu-latest

    steps:
      - name: 'Install the Cloud Foundry CLI'
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf7-cli
      - name: 'Install the Cloud Foundry Conduit plugin'
        run: |
          cf install-plugin conduit -f
      - name: 'Login to Gov.UK PaaS'
        run: |
          cf login -a api.london.cloud.service.gov.uk -u '${{ secrets.cf_username }}' -p '${{ secrets.cf_password }}' -o 'geo-gender-recognition-certificate' -s '${{ inputs.cf_space }}'
      - name: 'Backup the database (via Conduit)'
        run: |
          cf conduit '${{ inputs.database_name }}' -- pg_dump -f 'database-backup.sql'
      - name: 'Encrypt the backup file'
        run: |
          openssl enc -aes-256-cbc -pbkdf2 -in 'database-backup.sql' -out 'database-backup.sql.encrypted' -pass pass:${{ secrets.external_backup_encryption_key }}
      - name: 'Upload the file to S3'
        run: |
          DATE_AND_TIME=$(date +"%Y-%m-%d--%H-%M-%S")
          aws s3 cp 'database-backup.sql.encrypted' "s3://uk-gov-gender-recognition-certificate-service-backups/${{ inputs.cf_space }}/database/${DATE_AND_TIME}.sql.encrypted"
      - name: 'Remove temporary files'
        run: |
          rm database-backup.sql
          rm database-backup.sql.encrypted
