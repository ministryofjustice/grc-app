version: 2.1

references:
  app_containers: &app_containers
    docker:
      - image: circleci/postgres:10.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: grc-application-test
  cloud_container: &cloud_container
    docker:
      - image: ministryofjustice/cloud-platform-tools:1.24
        environment:
          GITHUB_TEAM_NAME_SLUG: sustainingdevs
          REPO_NAME: grc-application

jobs:
  build:
    parameters:
      env_name:
       type: string
       default: development
    docker:
      - image: circleci/python:3.8
      
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
          
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: build app image
          command: |
            export BUILD_DATE=$(date -Is) >> $BASH_ENV
            source $BASH_ENV
            docker build \
              --label build.git.sha=${CIRCLE_SHA1} \
              --label build.git.branch=${CIRCLE_BRANCH} \
              --label build.date=${BUILD_DATE} \
              --build-arg APP_BUILD_DATE=${BUILD_DATE} \
              --build-arg APP_BUILD_TAG=${CIRCLE_BRANCH} \
              --build-arg APP_GIT_COMMIT=${CIRCLE_SHA1} \
              -t grc-app .
              
      - run:
          name: push app image
          command: |
            pip install awscli
            login="$(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)"
            ${login}

            docker tag grc-app "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"
            docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"

            docker tag app "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:<< parameters.env_name >>.latest"
            docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:<< parameters.env_name >>.latest" 
