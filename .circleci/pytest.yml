version: 2.1
environment:
  FLASK_ENV: production
  FLASK_DEBUG: 1
  FLASK_APP: grc
  LOG_LEVEL: DEBUG
  TEST_URL: 'http://localhost:8080'
  SECRET_KEY: ef987sd9fwkjefosf9we0svs9q3evsd0
  SQLALCHEMY_DATABASE_URI: 'postgresql://postgres:password@localhost:5432/grc'
  SQLALCHEMY_TRACK_MODIFICATION: false
  DEFAULT_ADMIN_USER: grc-service-account@cabinetoffice.gov.uk
  NOTIFY_API: '${{ secrets.TEST_NOTIFY_API }}'
  NOTIFY_OVERRIDE_EMAIL: test@example.com
  BUCKET_NAME: '${{ secrets.AUTOMATED_TEST_BUCKET_NAME }}'
  AWS_ACCESS_KEY_ID: '${{ secrets.AUTOMATED_TEST_AWS_ACCESS_KEY_ID }}'
  AWS_SECRET_ACCESS_KEY: '${{ secrets.AUTOMATED_TEST_AWS_SECRET_ACCESS_KEY }}'
  AWS_REGION: eu-west-2
  GOVUK_PAY_API: 'https://publicapi.payments.service.gov.uk/'
  GOVUK_PAY_API_KEY: '${{ secrets.AUTOMATED_TEST_GOVUK_PAY_API_KEY }}'
workflows:
  test:
    jobs:
      - test
jobs:
  test:
    docker:
      - image: 'circleci/python:3.8'
    steps:
      - checkout
      - run:
          name: Set up Python 3.8
          command: |
            python -m pip install --upgrade pip
            pip install flake8 pytest
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - run:
          name: Install Playwright and browsers
          command: |
            pip install playwright pytest-playwright asyncio
            pip install -e .
            python -m playwright install --with-deps
      - run:
          name: Database init
          command: |
            python setup-db.py
      - run:
          name: Database migration
          command: |
            flask db stamp head
            flask db migrate
            flask db upgrade
      - run:
          name: Start site
          command: |
            waitress-serve --call 'grc:create_app' &
      - run:
          name: Test with pytest
          command: |
            pytest -s --show-capture=all
