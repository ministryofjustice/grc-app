name: 'Run python unit tests'

on: [push]

env:
  FLASK_ENV: production
  FLASK_DEBUG: 1
  FLASK_APP: grc
  LOG_LEVEL: DEBUG
  TEST_URL: http://localhost:8080

  # Please note: This SECRET_KEY is only valid within the context of our automated tests.
  #              It does not grant access to any systems outside the automated tests.
  #              This SECRET_KEY is not re-used in any other environment (test or production)
  SECRET_KEY: ef987sd9fwkjefosf9we0svs9q3evsd0

  SQLALCHEMY_DATABASE_URI: postgresql://postgres:password@localhost:5432/grc
  SQLALCHEMY_TRACK_MODIFICATION: False
  DEFAULT_ADMIN_USER: grc-service-account@cabinetoffice.gov.uk
  NOTIFY_API: ${{ secrets.TEST_NOTIFY_API }}
  NOTIFY_OVERRIDE_EMAIL: test@example.com
  BUCKET_NAME: ${{ secrets.AUTOMATED_TEST_BUCKET_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AUTOMATED_TEST_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AUTOMATED_TEST_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-west-2
  GOVUK_PAY_API: https://publicapi.payments.service.gov.uk/
  GOVUK_PAY_API_KEY: ${{ secrets.AUTOMATED_TEST_GOVUK_PAY_API_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      #- name: Lint with flake8
      #  run: |
      #    # stop the build if there are Python syntax errors or undefined names
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      #    sudo -u postgres createdb grc
      #    flask db stamp head
      #    flask db init

      - name: Install Playwright and browsers
        run: |
          pip install playwright pytest-playwright asyncio
          pip install -e .
          python -m playwright install --with-deps

      - name: Database init
        run: |
          python setup-db.py

      - name: Database migration
        run: |
          flask db stamp head
          flask db migrate
          flask db upgrade

      - name: Start site
        run: |
          waitress-serve --call 'grc:create_app' &

      - name: Test with pytest
        run: |
          pytest -s --show-capture=all
